<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0208.0337                               -->
<workbook original-version='18.1' source-build='2024.1.0 (20241.24.0208.0337)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='100' min='1' />
      </column>
    </datasource>
    <datasource caption='Orders (Multiple Connections)' inline='true' name='federated.0rsjxxb19b25lg0znv4mh1sjjlj3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1fwtrxl0ell7zl15ronv106d1qqh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Prasang/Documents/My Tableau Repository/Data sources/2024.1/en_GB-EU/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Sample - Superstore (2)' name='excel-direct.0y37zl61ca0cnu18nw6te06ozdas'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Prasang/Documents/My Tableau Repository/Data sources/2024.1/en_GB-EU/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0y37zl61ca0cnu18nw6te06ozdas' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0y37zl61ca0cnu18nw6te06ozdas' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_826428FF9C0F49058A1F8B1F53761C51]' role='measure' type='quantitative' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Region]' filter-group='2'>
        <groupfilter function='member' level='[Region]' member='&quot;South&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_826428FF9C0F49058A1F8B1F53761C51'>
            <properties context=''>
              <relation connection='excel-direct.0y37zl61ca0cnu18nw6te06ozdas' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet)' inline='true' name='federated.1b92lrq1vgk2o318a5m6c06j27tz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet' name='excel-direct.0a4k24x10oqug61085dsx1gaih1d'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Prasang/Downloads/9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0a4k24x10oqug61085dsx1gaih1d' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='date' date-parse-format='&apos;MX&apos;-yyyyZMMdd' name='Order ID' ordinal='1' />
            <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='2' />
            <column datatype='string' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0a4k24x10oqug61085dsx1gaih1d' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='date' date-parse-format='&apos;MX&apos;-yyyyZMMdd' name='Order ID' ordinal='1' />
            <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='2' />
            <column datatype='string' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_FBFA492EE585413595716717790B6760]' role='measure' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.946136' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0538642' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ad Dawhah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Al Minya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ardabil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Asyut&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baja California&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Basilicata&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brasov&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cajamarca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Catalonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chiapas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coimbra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Daegu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Diyarbakir&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elazig&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Federal District&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greater Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haifa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hims&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iasi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ishikawa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jinja&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kandahar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kerman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kirovohrad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lacs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Limpopo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luhans&apos;k&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manisa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Masovia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Meta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moquegua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Territory&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Olomouc&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pahang&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Piedmont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Provincia de Buenos Aires&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rabat-Salé-Zemmour-Zaer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rondônia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Pedro de Macorís&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saxony-Anhalt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sidi Bel Abbes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sud-Ouest&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tambov&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ucayali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vargas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vrancea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zhejiang&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&apos;Ajman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Al Fayyum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aqmola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ashanti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ayacucho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangkok&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgorod&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burgas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canterbury&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chaguanas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chuquisaca&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Corrientes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Durrës&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Espírito Santo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fujian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gombe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guerrero&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Haute-Matsiatra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hrodna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Imo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jawa Tengah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kahramanmaras&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kastamonu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Khyber Pakhtunkhwa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kymenlaakso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liaoning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Los Rios&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manabi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mecklenburg-Vorpommern&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mykolayiv&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nevsehir&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;O&apos;Higgins&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oslo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Perak&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pomerania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qostanay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rio Grande do Sul&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santo Domingo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shanxi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sliven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Gallen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ta&apos;izz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tekirdag&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vilnius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Western Visayas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zagrebacka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Abruzzi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Al Jawf&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anambra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astrakhan&apos;&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bacau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barahona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boyacá&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushehr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carinthia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chelyabinsk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cluj&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Distrito Capital&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Cape&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Extremadura&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Galicia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Casablanca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gunma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heilongjiang&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Huila&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ivanovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kaliningrad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kayes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kilimanjaro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mazandaran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Melilla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nakhon Ratchasima&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New South Wales&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Rhine-Westphalia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ordu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ouémé&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Phnom Penh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prague&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Quezaltenango&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rivers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Fernando&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shumen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sokoto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Styria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Táchira&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ternopil&apos;&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Valle del Cauca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yambol&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zaporizhzhya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adiyaman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alagoas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anseba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arica y Parinacota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Atlántida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bauchi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishkek&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caras-Severin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Equatoria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinandega&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cross River&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dar Es Salaam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dolj&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Entre Ríos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Flemish Brabant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Groningen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guangdong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Halland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hokkaido&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jujuy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Khartoum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Konya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lambayeque&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ljubljana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Magallanes y Antártica Chilena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Matanzas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Midi-Pyrénées&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moscow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Navarra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ninawa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pará&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Plateaux&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puno&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Red Sea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sabah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Semnan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sinaloa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sulawesi Utara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taranaki&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tipaza&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Upper Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vaud&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Xinjiang Uygur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yazd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zulia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adamaoua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Al Qadisiyah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anhui&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ardahan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Atacama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baja California Sur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basque Country&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bihor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bremen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Calabarzon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Catamarca&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chiba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cojedes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Daejeon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djelfa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elbasan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Federation of Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gaziantep&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hainan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hirat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;iauliai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Isla de la Juventud&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jizan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kankan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kermanshah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kirsehir&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laghouat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lisboa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lusaka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mbeya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;México&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moravian-Silesian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nangarhar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ondo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pinar del Río&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roraima&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Salvador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Schleswig-Holstein&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Siirt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Southland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suhaj&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thuringia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ulaanbaatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Värmland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vratsa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yangon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zhytomyr&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Abuja Capital Territory&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Al Madinah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ancash&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asturias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baden-Württemberg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bas-Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Braga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buskerud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Casanare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cherkasy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coahuila&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Distrito Federal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ebonyi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Extreme-Nord&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Galway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Gedeh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gyeonggi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hunan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Irbid&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jiangsu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kaluga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kayseri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kilis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;La Rioja&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lima (city)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lublin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manicaland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Masaya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mendoza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montevideo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namangan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North-West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oita&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ouest&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Piauí&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prahova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quindío&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rivne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Satu Mare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sibiu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sonora&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suceava&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tadla-Azilal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tete&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tunis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vallee Du Bandama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vlorë&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Al Basrah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alsace&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aomori&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arusha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Auvergne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bandundu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bejaia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolívar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulawayo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canelones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ceuta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chongqing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Córdoba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dhaka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eskisehir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Friuli-Venezia Giulia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Goiás&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guelma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hatay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hovedstaden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Istanbul&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kafr Ash Shaykh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kasai-Oriental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khulna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kwara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;León&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lorraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malatya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maritime&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Misratah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mures&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Neuquén&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norte de Santander&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nyanza&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Osh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pazardzhik&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poitou-Charentes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qinghai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saitama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santiago de Cuba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shandong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skåne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sylhet&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tbilisi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Utrecht&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vienna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western Australia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yunnan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;&apos;Amman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Al Gharbiyah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amazonas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aquitaine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aydin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangui&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bengkulu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Borgou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burgundy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caquetá&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Champagne-Ardenne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cidade De Maputo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Corsica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Diffa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Düzce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Est&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fukui&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gorj&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guizhou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hawke&apos;s Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Huambo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ivano-Frankivsk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jawa Timur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kalimantan Barat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Katanga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kiên Giang&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;L&apos;viv&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liberec&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Makkah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Managua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marrakech-Tensift-El Haouz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Medea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nagano&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niari&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Novgorod&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oaxaca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Osmaniye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peravia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Porto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Río Negro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salzburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;São Paulo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shinyanga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Södermanland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stara Zagora&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tabasco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tel Aviv&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uusimaa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vinnytsya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;White Nile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambezia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Akwa Ibom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Almaty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Antwerp&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Artemisa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Auckland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bamako&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boeny&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Campeche&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chocó&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Copperbelt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drenthe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Escuintla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Free State&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gisborne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harjumaa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hordaland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ile-de-France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jalisco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kabul&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kars&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Khomas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kumanovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lazio&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Loreto&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marche&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mayabeque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Miranda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Muharraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Negeri Sembilan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nord-Ouest&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nusa Tenggara Barat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oruro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pays de la Loire&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qazvin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Michael&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santander&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sevastopol&apos;&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sistan Va Baluchestan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Kivu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sumy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tasmania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tochigi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Usti nad Labem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vest-Agder&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yalova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yoro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aceh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Al Marqab&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andalusía&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arauca&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asunción&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baghdad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Basel-Stadt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Braila&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Buzau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Castile and León&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chernihiv&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuscatlán&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Edirne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F.C.T.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gangwon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Granma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gyeongsangnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hesse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hunedoara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iringa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jiangxi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kampala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Khmel&apos;nyts&apos;kyy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kindia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;La Romana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Limburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lubusz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maniema&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maseru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mérida&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montserrado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Okayama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Overijssel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Picardy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Primorsko-Goranska&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quintana Roo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rize&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Luis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Savanes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sichuan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sonsonate&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sucre&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taipei City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trabzon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tuscany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Valparaíso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Volyn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zeeland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Afyonkarahisar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Antalya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ashgabat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Atlantique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Balikesir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bavaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brussels&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Callao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Jutland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chiriquí&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cundinamarca&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dayr Az Zawr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Donetsk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Enugu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gauteng&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gezira&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guangxi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hamadan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Holguín&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Isparta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Junín&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Karaman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Khatlon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korçë&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Languedoc-Roussillon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lodz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Magdalena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maradi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mato Grosso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mostaganem&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nayarit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ningxia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Novosibirsk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraíba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pleven&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pwani&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rhineland-Palatinate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Catarina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seoul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sindh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Dublin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sumatera Barat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tarapacá&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tizi Ouzou&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Upper Normandy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Veneto&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wellington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yevrey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zürich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aichi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Antioquia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Atsimo-Andrefana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Balti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bay of Plenty&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bistrita-Nasaud&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bryansk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Camagüey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Luzon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chisinau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Constanta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dix-Huit Montagnes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Donga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Franche-Comté&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gharb-Chrarda-Béni Hssen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guantánamo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Homyel&apos;&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Igdir&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Izmir&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kabardino-Balkariya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kherson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kordestan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lombardy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maramures&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mato Grosso do Sul&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Minas Gerais&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mpumalanga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Neamt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nitra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nueva Esparta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Parana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Plovdiv&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qaraghandy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rift Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saida&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sergipe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Holland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sumatera Selatan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tarija&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tlemcen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uppsala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Veracruz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yobe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Al Bahr Al Ahmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Almaty City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anzoátegui&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Artibonite&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Australian Capital Territory&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Banaadir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beirut&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bogota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bujumbura-Mairie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canakkale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cesar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Choluteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cordillera&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denizli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Duarte&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Esfahan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Friesland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Giurgiu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guayas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hormozgan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ilina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jambi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kaduna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kasai-Occidental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Khorezm&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kutahya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebap&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lori&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mardin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maysan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Misiones&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murcia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nord-Pas-de-Calais&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nusa Tenggara Timur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Osaka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paysandú&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Podlaskie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint-Louis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santiago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shaanxi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sivas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Surxondaryo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taza-Al Hoceima-Taounate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Valcea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Western&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yucatán&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Al Buhayrah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amapá&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Apulia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ash Sharqiyah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aveiro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Banghazi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bekes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bur Sa&apos;id&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cantabria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chubut&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cork&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dhi Qar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Espaillat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fromager&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Golestan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guelmim-Es Semara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haut-Sassandra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hradec Kralove&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Imereti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jawa Barat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kagawa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kassala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Khuzestan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kwazulu-natal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesser Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Los Lagos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maluku&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Markazi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monseñor Nouel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mwanza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niamey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Brabant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nzérékoré&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Osjecko-Baranjska&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Podgorica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poltava&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rio Grande do Norte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salah Ad Din&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santiago del Estero&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shanghai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Skikda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T?nh C?n Th?&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tehran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tolima&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Villa Clara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Cape&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zacatecas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adamawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Al Qahirah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ankara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arequipa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atakora&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Baki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Batman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bingol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brest&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Calabria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ceará&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chihuahua&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dagestan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emilia-Romagna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fès-Boulemane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gelderland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hainaut&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hiroshima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ibaraki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jizzakh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kano&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Khánh Hòa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Klaipeda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lagos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Litoral&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manzini&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Matabeleland North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monagas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morelos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nariño&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nouakchott&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panevezys&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Piura&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Puebla&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajshahi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ruvuma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sancti Spíritus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sikasso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Chungcheong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sulawesi Tengah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ulsan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Varna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Waikato&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yaracuy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ziguinchor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Acre&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Al Minufiyah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arbil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aswan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bahia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bashkortostan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brandenburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Delgado&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Castile-La Mancha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cochabamba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dà Nang&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Edo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fars&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gansu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greater Accra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gyor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hyogo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Irkutsk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jilin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kanagawa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kinshasa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;La Vega&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Limousin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lucerne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mashonaland West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mersin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mopti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nampula&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mindanao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Orientale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oyo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pichincha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Provence-Alpes-Côte d&apos;Azur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ra&apos;s Al Khaymah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rogaland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Luis Potosí&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saxony&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sicily&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Souss-Massa-Draâ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sud&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tamaulipas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Th? Dô Hà N?i&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tyrol&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Van&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Voronezh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zhambyl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;&apos;Asir&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Al Hudaydah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ar Raqqah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Azuay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bani Suwayf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benguela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Borno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bursa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carabobo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ciego de Ávila&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cortés&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dire Dawa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Flanders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estelí&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fukuoka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grad Zagreb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hebei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hubei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Inhambane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jeju&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kalimantan Selatan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katsina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kigali&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Libertad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liège&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lower Normandy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manawatu-Wanganui&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mehedinti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nagasaki&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niassa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Holland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Osun&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pernambuco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portuguesa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Queensland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Risaralda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samsun&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sarawak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shizuoka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sofala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stavropol&apos;&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tabora&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trengganu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vladimir&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yamaguchi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zamfara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aksaray&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alibori&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antofagasta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arkhangel&apos;sk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atsinanana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Baluchistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bechar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bitola&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Budapest&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Campania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Centrale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chittagong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Constantine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Doukkala-Abda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Erzurum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Francisco Morazán&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gilan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guárico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harare&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ilam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kabarole&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuala Lumpur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Las Tunas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lorestan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malanje&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maranhão&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Matruh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mtwara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newfoundland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nord&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nuevo León&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pavlodar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Plzen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qashqadaryo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rhône-Alpes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Catherine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Setúbal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sirnak&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Khorasan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sumatera Utara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tartumaa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tocantins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Usak&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vitsyebsk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Flanders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yogyakarta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amasya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Annaba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arges&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atlántico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Balearic Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Batna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biobio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Caldas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chimaltenango&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colón&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dakar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dnipropetrovs&apos;k&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland Proper&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guanajuato&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hajdu-Bihar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ho Chí Minh City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ibb&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jubbada Hoose&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Karbala&apos;&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kharkiv&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kocaeli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lagunes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Littoral&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madrid&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maputo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Matagalpa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michoacán&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morogoro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;National Capital&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Opole&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Plateau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Razavi Khorasan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saarland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sanliurfa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Selangor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Silesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Splitsko-Dalmatinska&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sulawesi Tenggara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tanger-Tétouan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Umbria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Västra Götaland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yaroslavl&apos;&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zinder&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Al Iskandariyah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Analamanga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ar Riyad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Babil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Banská Bystrica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beni&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botosani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Busan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chaouia-Ouardigha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cienfuegos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corum&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Diyala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eastern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estuaire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Galati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Granada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hedmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huehuetenango&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Inner Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jerusalem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kalimantan Timur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kaunas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kigoma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;La Pampa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liguria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lower Saxony&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mandoul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Meknès-Tafilalet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nairobi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigde&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Lebanon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ogun&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Otago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pernik&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Potosí&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Querétaro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rivera&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Cristóbal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sardinia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shkodër&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sofiya-Grad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stockholm&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tabuk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tottori&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trentino-Alto Adige&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valenciana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woqooyi Galbeed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zanjan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_FBFA492EE585413595716717790B6760'>
            <properties context=''>
              <relation connection='excel-direct.0a4k24x10oqug61085dsx1gaih1d' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='date' date-parse-format='&apos;MX&apos;-yyyyZMMdd' name='Order ID' ordinal='1' />
                  <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='2' />
                  <column datatype='string' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='City' ordinal='8' />
                  <column datatype='string' name='State' ordinal='9' />
                  <column datatype='string' name='Country' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Market' ordinal='12' />
                  <column datatype='string' name='Region' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_96CD40C7A1B14A139B8E6A5B0A2FE77D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='USA Sales and Profits' type='sheet' worksheet='Sales in USA' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='USA Sales and Profits' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Profits in USA'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ff0000'>Profits in USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet)' name='federated.1b92lrq1vgk2o318a5m6c06j27tz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b92lrq1vgk2o318a5m6c06j27tz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_96CD40C7A1B14A139B8E6A5B0A2FE77D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]</column>
            <column>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' />
              <size column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Profit:qk]' />
              <text column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' />
              <text column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Profit:qk]' />
              <lod column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Quantity:qk]' />
              <lod column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Shipping Cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5B96203E-322B-4821-9724-DA36AC5EA472}' />
    </worksheet>
    <worksheet name='Sales Trend in USA'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ff0000'>Sales Trend in USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet)' name='federated.1b92lrq1vgk2o318a5m6c06j27tz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b92lrq1vgk2o318a5m6c06j27tz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' included-values='in-range'>
            <min>40000.0</min>
            <max>146729.09649999969</max>
          </filter>
          <slices>
            <column>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]</column>
            <column>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' />
              <text column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' />
              <lod column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]</rows>
        <cols>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[tyr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{BC046D37-9ED7-4295-83D5-98EC3361718C}' />
    </worksheet>
    <worksheet name='Sales in USA'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ff0000'>Sales in USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet)' name='federated.1b92lrq1vgk2o318a5m6c06j27tz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b92lrq1vgk2o318a5m6c06j27tz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Longitude (generated)]' field-type='quantitative' max='-441009.61983496137' min='-15911539.852315424' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Latitude (generated)]' field-type='quantitative' max='7889914.7987654097' min='1435951.24356827' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' />
              <text column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' />
              <lod column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]' />
              <lod column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' />
              <geometry column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Latitude (generated)]</rows>
        <cols>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9B22EE48-CC0F-4342-9CBE-3E32E0F062B4}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Multiple Connections)' name='federated.0rsjxxb19b25lg0znv4mh1sjjlj3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rsjxxb19b25lg0znv4mh1sjjlj3'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]</rows>
        <cols>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{5EA243F7-E82C-4E4C-89D8-6341C1007F1F}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Multiple Connections)' name='federated.0rsjxxb19b25lg0znv4mh1sjjlj3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rsjxxb19b25lg0znv4mh1sjjlj3'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk]'>
            <groupfilter count='2' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Category])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]' direction='DESC' measure-to-sort-by='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Sales:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]</column>
            <column>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Profit:qk]' />
              <lod column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Sales:qk]' />
              <lod column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Profit:qk]' />
              <color column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Sales:qk]</rows>
        <cols>([federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk] / [federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{7B4E56CC-D684-4CC6-A370-E174CC71BCAA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='USA Sales and Profits'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet)' name='federated.1b92lrq1vgk2o318a5m6c06j27tz' />
      </datasources>
      <datasource-dependencies datasource='federated.1b92lrq1vgk2o318a5m6c06j27tz'>
        <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
        <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Sales in USA' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Profits in USA' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Sales Trend in USA' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='Sales in USA' pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='81250' id='10' name='Profits in USA' pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' type-v2='color' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='12' name='Sales Trend in USA' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='90375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='13' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sales in USA' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Sales in USA' pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Profits in USA' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='81250' id='10' name='Profits in USA' pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' type-v2='color' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='12' name='Sales Trend in USA' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='90375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Sales Trend in USA' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DC2C370D-E763-41C7-A4D4-41E2BEEC365C}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]</field>
            <field>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2AFAD9FF-0823-46AA-905D-74593D7E9B0F}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]</field>
            <field>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Region:nk]</field>
            <field>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9AA25C0-A553-4AC7-B391-A000604190C0}' />
    </window>
    <window class='worksheet' name='Sales in USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]</field>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5046DCC7-BB9B-464A-B2AA-96CF0BE401DE}' />
    </window>
    <window class='worksheet' name='Profits in USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]</field>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{64EF970B-B166-4B1E-B96F-47850D3BD514}' />
    </window>
    <window class='dashboard' name='USA Sales and Profits'>
      <viewpoints>
        <viewpoint name='Profits in USA'>
          <highlight>
            <color-one-way>
              <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
        <viewpoint name='Sales Trend in USA'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales in USA'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{001C95F8-ED0F-47A3-845C-5056E9D290DF}' />
    </window>
    <window class='worksheet' maximized='true' name='Sales Trend in USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]</field>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]</field>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]</field>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[tyr:Order Date:ok]</field>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60BD1D6A-D017-49AA-B635-277DC1E37B6B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Profits in USA' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales Trend in USA' width='192'>
      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
      825Q+osYlQsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales in USA' width='192'>
      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
      sNxZodq8h0uAD0ih0fEaZNPm0Mf/EcKOVSDoEm+73aZarWKaJqOjo2GZ4vr6ejisOel7wCa9
      WUrJu3/2Oi/cfUhO7/KkEwTUPJeSYWKGXeECbi2vcXR8rGe1SML/tLDCjdQjFaib8SDIyXXK
      WpXnz53ly1/6AkII5ufvMz3dDXJ98O4H3P2Lu0yKCWrpGilS5J3uyNKO3+FS+xL/+d//W4yN
      je3omQ3xdGJXK4CaW+U4Dp1Oh3q9Tj6f7zaRymZ3zABCCI5eeJ5Ld+d5IdDQge+X0oydOMel
      lRVO3H3IQd0ENI5PjG8+8AY8Kfm/1xY4PTnFmU8/z2fKZd6/Po/TXMcXaW6um7REGd/XGZ8Y
      Z2am20pxZuZR1PjQoUO8f+R9VpZW+Mqnvkqj0eC7/893KHklLN0iR44bV28w9rkhA3wUsOvG
      WJqmUSwWSaVS1Go1giAgn8+jaRq6roftS7aLcrmM+Nlv8NYbf4H2cJEzr3yRsY3p6Feyb5G7
      dIOyMVj1WHA6fPYnvs6nP/dqaJP85NdlOLTun/7271Ioljk0dYyLl6/zpS+8hmX11jA0lu7w
      9g//HAoznFyZ4w++90OWMzpBu8aIV+Rw+gD/7//8vzJ9eJrvfev3qFYXOfuzf5OvHQv4H/7R
      v+Fv/t3/mGHXn2cHu1KBolBtwtWw5kymGxFeX1/v6eET79XZz30ogwDX88LBb0IIOp0O13/n
      X/FpsbnIxQkC/rC+RmF0hLNf/xonz53te+zoJHfP8xIHYM9dfZMbKwKt/oBmYDB15AR3rr3L
      0i2b2WaB+bl3uVR9yM/9zV/lJ7/0Cn/+3e9w/tUvcvmH3+P2vTo/92u/xOCSnSGeJuxggFcy
      hBChFFWuUcMwKJfLPR2dt308TQvHDilkMhlyn/oES05vjk7H9/l2ZZnyy5/k6//Rf8ip8+cG
      +uVVSxUhRN/JiqaZor62wHrL5ROf/SytxTkWllZYX1nHay/xgzu3aa8vcPnWXezqAh1rnGD5
      Mt954zI3r7zL9bvLO77nIT487JkBXNel0WiEY4Nsu0ukyjhOkrI7gVo5jp99jsULZ1j3Hs0y
      mHc6BCeO8o1vfjOcw7tXCBnwYO4ui+s1OpVlrl6/ysiBc4xM+czbJl//xBc5MXOazkqbO9ev
      c/L8WQpTp/j1f+8v8/y5c8yMD07zGOLpwp5VoCAIaLfbtFqtUOUplUqhC9RxHGq1Gq7rblsN
      2nSRG/uur6+z8q9+l+dTXTXr/3p4l6/9yi/zwguPv734t/7FP2PhXcmk2TX2V91VfuY/+yaT
      U5Nbf3mIpxZ7XgE0TSObzVIulymVunn2iuDVjKuRkZFNxmbcLhgEtW+pVKI2Vsbb+N6pQumJ
      +eR/4ud/CW+sHo5QGjVHuXXz1hM59xCPD3tmACDUqTOZDOVyOTSMVU6+rutYlrXJJkhign5N
      r9R+p7/0RX40VuADzyar6QQ79DbtFpZl8c1f+iZN0URKiSe9YUDsI4B9nw9gWRamaeI4Tk/C
      nGl2I6ie5w10kUZHH6n/KwghKJSKvPTTP0mz2aS2thaOEX0SmD00y7mfPsfl371MQMDBQ5tz
      hYZ4trAvK0ASfN8PJ6pDd6D06Ogo2Wx2S+9QEAThHLA41KpSKBQ4e+ECMwcOJBzh8UAIwYsv
      fQJ7ysGb8JicfKT/70SlG+LpwWOZEGNZFp7n4bpuOFhaqTW5XA7P8+h0Oj1Eoz4fWAEWqQ8W
      QuzZw7RT2LbN9evX+bX/5Ne63agjcF33iV/PEHvHvq8AisjHxsbQNI1GoxEGoAB0XadUKvUY
      xVJKlpeXw1wilWCnCN5xnE1pFB8GoZmmyXPPPRcSevQaVKv2IZ4tPJYVQEnnUqlEvV6nWq12
      Ux02CEYxge/7uG7Xr99oNMhkMtRqNdrtduhBsm2bbDaLruu02+0w6a5YLD7xhDQVSEtCOKNg
      iGcKj80GAMKCGdhc32sYRhgoA8hms6yvr1MoFOh0OmFEudFohOkQ2WwWz/PI5/N9E+72G0pN
      830/NOA9z8PzvE0Sf6j+PHvYcyBsK8Tbk8Rh2zZra2uhZ8gwup0gms0mqVQqrDuwLIt6vU42
      m6XValEqlRgZGQkZ6HHA9/0wwGea5ib3rmmaFIvFnjGuQzxbeHzUs4GtiMI0TQzDCKWpGnmk
      qsaio5BUusOT6rimDPVMJhOqN0EQhAa+4zisr6+HDJDP58Ms1CGeDTx2BtgKmqaRTqfDVIm4
      satyjKIeIPXT6XTI53eeexk9VjQmEfXiKMJXNofv+xiGQbHYzfVR21zXDVeKSqVCsVjEspKb
      Cg/x9OFDZwCgrxqjVI24ezTKANuJK0QRBAGNRiN00fq+TxAEWJbV09UtMtEN4AAADmRJREFU
      6uVJcrkqg9g0zdAuUHlPpmliWVYY/R4yw9MJKeWHzwBSyp6gV9y9GGWCKCMolanVavUU2W+F
      VqtFo9HYPFppABNtdWxVHNTpdHAcJ1SPOp0OpmmSy+V2lRo+xOPHh/5WpJQ9Hp2kHKBoIUtU
      ogZBQLPZ7CnM3+pcvu8neqR2o0pFr1nXddLpdJj+oVY113WxbbtH7Rri6YAQ4sNfAVSblU6n
      E6ZA9NsvPhJVMUez2ezxxiRBEb+qV4gik8nsSxRX0zRG+jTLUq7cTqeD53nUarWwhDSXy4V2
      w1BderL40FcAVVE2Pj5OPp/vG0xSxB5lEkUsSvXolzuktjebzTDwlnQd+3EvUSaNZ7amUilM
      06TVatFsNkMjWjUai9dMDPH48aGvAPAonbpYLGKaJuvr64n7JaVOq+21Wo10Oh3GDqDrx1cr
      ixCCdrvd8/1Op0M6nd6XtOa4HRNdjZRdoPbrdDo9ZZ+GYeC6Lp1Oh5GRETRNw/f9TQwUvd/h
      SrE/eCoYQEGpQ6lUKiSaVqvVoxZFX35UuqvKNGV4Ku9OVPeOrgCdTgchxK5rl+NQzAZdgk6n
      0z0EDo8ahx06dIj19XVGR0d7apOjDK68VIZhbKpfVob/EHvHY48E7wVSSlzX7UmQU4h7ioCB
      LsdWq8Xa2hqjo6PhijExMcHY2FjYyWI/rne7ktn3/b7X22+lG2L/8VStAHEo1Wh8fBzbtmm1
      WmEOTrxQRtkI6u+o21T9qAQ7TdNotVrhd/fzereLQYlzQ4J/cniqGQAeuRgzmQzpdDoMOCUZ
      vipgBWyqOkun04yMjLC2tsbExERYefYs++f7ddobYvt46hlAQUl05UnJZDKh4eg4TrhN5eK0
      220ajQa+71Or1XAcB03TyGQySClJpbpzxCqVSt8YQJL+PcRHC88MA0ShVgVVbB9VeRSy2Wzo
      UbJtm/Hx8R5jM5vNsrKyQrFY3GRfKMmqAmTR9u9PE4aMuXc8kwwQRb/gkbIfyuUyKysrPfuo
      HkMjIyPout6jRqnkt6WlpfD/Bw4c6Kn/HeKjgaciF+hxQjHBsWPHelImVAv3Vqu1yWXZbDap
      1Wqhi1JFd4f4aOIjzQDwqHGXZVlh1ma73WZ0dJRWqxX+FItFKpUKlmUxNjYWGtPDUsePLoQQ
      T3cc4HFC5QWpANry8jKpVKonwCSlRNd1JiYmnmlv0RD98ZFfAfpB1/WwwkwN+1D2QDSG8DhL
      Lof48DEUa3SZYXJyMvQsRYl+v9UfVcizuroaBvS2m849xP5jyAD0eowymQylUqnHBtgPd6Mi
      9Hq9zr1798LWL0EQ4LpuYoR7iMeP4foegaoJuH79epiRWS6XwzrgnULlMrmuG7aJXF1dxbIs
      JiYmqNfrOI4TFulomka5XO7JTo0yXzwNPIphTGB3GDJABCobdWJiImzfGG3yuxMoVadarYZS
      XRXQZ7PZHqZQ8H2fer2OZVlhvXIulwtbxbTb7bBmQBXTNJtNCoXCkAF2iSEDxKDUoShBNRqN
      xGKdrbI247lKzWYzbJ2i6zqmaW4q0HEcp6dEVPVEUswTPXcmkxm2aN8jhgwQg1JDVOFKs9lk
      aWmJhYUFTp48GbpDle5u23ZY1aaKXFT5ZZy4W60W2Ww2JOQkBohDrSTwyB4JgiBkFMMwwtYy
      Q+wcQwboA5U4J4Sg0WjQ6XSo1WohkbdarbAQvt1u02w2SafTWJaFYRhUKpVNGamjo6NUq1VS
      qRT1en1XzXTjq44K7qlU8KEqtDMMGWAAlGRXhC2lDFuqqCZZ2sZUy2azyfJyd0JkoVDYpK4I
      0R0uruoa4kP9arUaxWKRZrNJNpvtiUOocVPxIhrVrGt+fj68xomJiXAoyRBbY8gAW0DTtDCT
      VNM02u122CRXEaNKoGu32+i6nphdGm3lEtfbhRDYts36+jqpVIoHDx6EnbELhUJYAlmpVEin
      05TLZVqtFu12m3w+H65Ayq5QSX5DbI0hA2wDimCV4ZnUW8g0TdLpNOl0eqAv3zRNlpaWwo52
      qg9qJpNhdXWVAwcOhHp9sVgMC/kdxwn1/Eajged5YRWc67ph/1TbtqnX65RKpeEqsA18bHOB
      Hgds22Z1dXXLYR7RdutSSur1elilBl13qSrYUa5O1ShA/c7lcmFrFbUKRVsxqqDekAkGY8gA
      +wjf91ldXQ09O9tNoPM8j6WlpdDADoJg28M/FhYWmJ6e3rRdZcEqe0IdFx5luA6ZY6gC7Svi
      qQxqPloSlHRXZZ6zs7NAV9Wp1+vbPmc2m6VarYbNeKO2hioEiqtla2trTE9PUygUPvadrIe5
      QPsEz/O4cuUKjUYD6BL46uoqQLgiqLQI27ap1Wrouk6n08H3/dBrpDpebxdqDFW8dUyn06FS
      qYSqVHS7rus4jsPa2hq1Wu1jPdtsqALtE9bW1mi1WpimydzcXCj5laSPFuV3Op1wkqZytVar
      VY4cOUK9Xg8L/6Not9thkT4Q5hCp1AnlJlXVa2traxSLxU3p3LZt4zhOz5ARwzAol8s9gws/
      LhiqQPuEfD7P3Nxc6KlRxTSapoUEn8lkyGazYZNcFRVe///bu9betIEgONjYOGkwBpxApSr9
      3P//dypFrZAQIiR+QBzAOfdDNcfZODyM07jgkSo1hLhJunu3tzcz+/wstQi6rmM+n2/JMJ+e
      ngD8pWdzZJNlWXBdV45vGo/H8v1s02bBXefm5kaWPtPpFI1GA7e3txdXDtUJUBIMw8CPHz/g
      +z46nQ6AjcCefyfu7+/leUENPCEETNOE53lbzx8MBvB9H71eD29vb/IQqwasutp3Oh1MJhMM
      h8Ot9/Df4uRNfnyJnqN1ApQAcv3JHmVg0p8UgGxXql+TB3qWZqHrugxSNdDpesebZN4gm6aJ
      brcLz/PgOI5kk7KE4kVZGIa4u7vD29tb6q7hUlAfgkvAarXCbDbb6t5k7wNUm8bs+/jHNE15
      s6uCF2YPDw9bh1Ze0IVhmHq2YRhyFsFoNJIH85eXF0wmE4zH45QGmhrpSxLl1DvAieBFVpb7
      Q3DI3y54nicTYLlcwnEchGGYCk7OH/v27dtWbc+zQ5IkkqTHOWh0wxgMBmi1Wjsn4dB79b0h
      H+eIOgFOAPk/nufh9fUVnU4n1f1RzXl3Yb1eQ9M09Ho9qUQLgkAS5/iMfr+/k//f7XYRhiGi
      KJKzFo7Fe4NGzhV1ApwATnbhONXxeCxXT13XD7ZT5OwCdn50Xcf9/T08z5P1/iGzkTVNkwfw
      ojhm4OA54GISoOwOB4f78ZlXV1cYDodYLpdywDY5O/uCV9d1fP/+fes1x3FK+373gXJQ0q+5
      e5y7H9LFJAA7MmWY3FKllZ1WQ6+h6+trJEmCyWQCIYQczLELURSlBnVwOgwt31X7lF3DBIvC
      sixomgbf9wFsptzQTftc+UMXkwBl8uPjON7q0mTB+t+2bcxmM0yn05RDtQrHceD7fioB1IDP
      yiapRIvjuBRPIfVugIlFC0lSNejErUo/zwEXkwDq8IxTQceGXVgul5KO7LouoiiSjtR59Ohj
      Sg3uZqRG7NMVA5BdItX6HUBKzJNt21L30Gg0ZLLRUPjLly8pU+H/FReTAGVi31yv5XIJ3/fh
      uq58zbIsSVqjqJ1tySIWjPQc4uqd17nhhRxdrtWLNBLzdj0/W+IR6/VacpZ2zWX7H1CT4QqA
      /Xp6/lDgslgsJGlNbYkSdIpQxzN5npdShRUBtcbZcVGapqHZbErVmFrHH7JrqM/iz82k0jRN
      XrSRct1qtVKlJt9b5QSpd4ACUAXrNM56enqSplrvgd6jBCWNrK+LgkoxIYQ8EzApsxd0Rc4M
      ebsL5ZfEfD6XVHCi2WxWXnNw3j2uDwBLj4eHBzlpkqv+MTx+AHLgXxzHJ7UbGYzcXU69yNo1
      deeYQI7jGL7vb1E0qoR6BygA3tKuVivYto0wDFP1/i6QlPby8iKpClXstXOXO7WEEUJgsVhA
      CCFtZKqEOgEKQNM0fP36FUIITKdT6eKwD0mS4PHxEaZpStpDlVHm9xdFEYQQsCxL2rdU4XxQ
      H4KPBFdwOrtxaz9ki18sFmg0GkeXSv8aHx2YfP7NzQ0+O/aqvQRVEBSxs/14TKcjiqL/gm//
      0asyzym8Tf9M1AlQALqub7Et9yVBFEVbopgq4l9+f3TY+0zUCVAAvFxSD3X76mXP8zAYDCqd
      AJ9Rk3+2I0WdACcgO2N4VxJUOfAvGXUCnIBGo4F2u51imL4X6JZlSZ//Ght8diesToAToWma
      7GTsKiFs20YQBJWeCFlklyqiIebv6dD28UeiToASYBjG3qmS/I/2PE8mQd4UmSw+gvufhyLB
      X7SDw99RFcx763uAkhBFEYIgALBp8+UFbhzHmM1msCwL8/kclmXlGuHO5/NU52gwGADYBM8x
      lIdD7Fgounnv8+QwqV2bIlNpuBC02+1KJEB9E1wSyITc1+psNptwXVdaoGRLIjrFGYYB13Uh
      hMDz87P8/Cmrbt4zGMC/fv2CaZoYDocpXQDJekzIrLKtiNT0+vq6EsEP1AlQGujPT4IcX2OA
      qLsBV1MhBIIgQBRFUh8A/J0lxvfk1cgqR+eQhFAdKrJgEHJWwWg0wtXVFVarFdbr9ZZMM+9r
      DwWHflRJSFOfAUoEZ/oCGw/+0WiE379/SxYpsDk4mqaJu7s73N7eotVqwXEc9Pv9LflmlutP
      HFp+7CqB+DH1CUmSoNfryWB/fX1Fu93OVa0dW/6Yplmp4AfqM0DpWCwWkhev6zp+/vwpFVh8
      zbZtKVDp9/tSsBIEQe55gLyjdrudCsI8tVYeqNrKO5cwiOM4Thn00vGCgX+qppo/a9XmGjfV
      ocw1TodKjhNCwHEcdLtdPD4+Skt0x3EQBMGWjeF79wm2bUs/f8MwpPfPIfX3oautunMlSVJ6
      oFI8VLV4+wNBF0PBGf77rgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='139' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='183'>
      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
    </thumbnail>
    <thumbnail height='192' name='USA Sales and Profits' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5QkWXXg/QuXkd6Vr+rqrvZ2emzT4y1jECCMQCChlRASQkLSrrTn09n9
      tMsKVrBCrFafOKwQCIQMCCE80jAwBpiZ7pnu6ZlpP+1dVVeXr/Qu/PdHVkRlZmV1V5uZnp7K
      3zl1sjIi3osXke++d+99970nOI7j0KLFIkW82gVo0eJq0hKAFoualgC0WNS0BKDFoqYlAC0W
      NfUCcPIgfOqT8PKh+qu+9rXz5/L443OP7d8BOQOO74fRHDz2LfjffwnTRZg4DV//wWUWvUWL
      y6deAL78Jfj1j0BfEp7/CXzq0zCVh8FByE/BZ/4MDp2Bl56FT/0ZpErVdMEg7NgGX/kC/OyF
      6rH9OyBnwon9MDoK33kWPvxBkIAfPwkTg1CxX8tnbdFiDvUC8Id/BF/9G/i3n4IFbOiG7z1V
      PfelL8CqTfClv4XdL4FWhpJWPbd9O+zYCe/+Fdj25Gx+jlP9IwS/81742B/D2Sl49mk4vAt+
      8tJr8YwtWsxLvQA8/iiUTRCAJx6D42dmKjBw3UbYvQu23Art7VDKwOhkTWIfxMMgydWvt9wB
      f/b/wvefg2V++P6ToCiQPgW3/gJ88R/h8PbX4hlbtJgXoTUS3GIx0/ICtVjUtASgxaJGrv2i
      adrVKkeLFlcFufGAqqoXTJTNZjFNE0mS8Pv95PN5crkckUgEANu2EQTBu14URWzb9v4EQUAU
      RRzHwbbrXaGmaSLL8py0Lm6+juMgCAK1Joxt20iS5F0nyzI+n49SqeRd5947EomQy+Xq0rvP
      UywWmz63IAhIkkRbW1vdsdpnvVymp6cxTXPOccdxOJ+5Jor1nXmlUiEYDGLbNoFAgEgkckXL
      +UZhjgAshFAoRDabxe/3YxgGPp8Px3GwLAtFUbwfqraSusdEUZxTcV3mO15L7flm17r3BDAM
      o2llArAsC8uyvIojyzLBYJByuXzee9u2TSaTQdd1HMdBVVWCwSCyLNcJ7qWiKMq8ZXZpbBQA
      77v77JIkee+iXC7j9/vx+XyXXb43GpdkA7gtq2VZaJqGaZokk0my2SyVSqXuWrfVh9kfp7G1
      cs+JougJyKW2VrVpawWv9riqqnMqum3blEolDMM4b/62baNpmpevpmmMj497veLF0KwHXMhz
      Nwp+bRr3nJuv4zgoinJR5VpMXLIRHAqF8Pl8+P1+ZFnGcRxisRi6rpPNZgHqeoLaymiaJqqq
      emqKq7ZAvSBIktS0QsxXSRoFZz41S9d1DMOou9a27YuuwFDtZRRFQdd1UqnUBXuwxrSaptVV
      Vtu2cRwHWZYJhUJ1z+bSeI9mAlErpKZpXlCFWqxcsgCIouj1BJVKBUVRkGWZQCDQtAWG2d7A
      VZd8Ph+madZVABe3Mjf+nQ83bxdXBWhM56o+l1shXDvIzd+yLKanpykWi3OErhmyLKOqqtcj
      6rru9Uy6rlMqleY8y0KwbdvroV2hyufzc3rnFpfpBnUrlyzLWJZVpwM3/mCNlU3XdXRd9865
      f7UVxz3mCpvf7/d02/nKUyt0tQLgqla1115Ki+9iWVadoLsYhkEul2NycrKuFW6G29NBVZgy
      mUxd+d13sRBharxGkiRM0/Se3zRNyuVyqxdo4LKtNrfVL5VKhMNhBEEgm83Oq7oIguD9WI0t
      cWNvUWtEW5blqS3usWYVsPF+7vlwOEyxWMSyrPOmWQiWZdV5nNxKW9vb2LZNKpXyeghXiKPR
      6JyGQdd1crncnErs5hkMBjFNc177xDXIFUXx8hYEAcMwPK+eIAhYlkU6nfYM95ZXqCEUQtO0
      BblBG3F1TFmW0TTNswGgvnV3W3P3eC2uZ0PX9aZGW62HqLY1rxWeWvfrQozhRpfrfIiiSCgU
      olgseiqba/c0U9vmQxAEurq66sqVTqcxDKOp56w2nfvebNsmGAwiiiKapmEYhueRk2UZwzC8
      a13vXDPXsaIoKIpCOByus8EWG5fvt4M637trGFcqlbpKN5/nolY4an/oZrh++FpVp7ZHsG27
      TsAaz9eWo7ayLsT9ms/n61y9tc9wse+p9nkahVOSpDm2jKv+FYtF7x273jfTNAmHw16j4Pf7
      8fv9nlerUUjd/13jfbFzRUIhisUiU1NTaJo2p5K5FVKSJM8P3fijQ73brlFf9wpbIxyNbtML
      0aySN97LFd7G/NyyNas0F2Oku6pTLYFAwBNOVVUJh8PeZ2158vm8Jxju/7IsI4oilUqlTgBM
      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
    </thumbnail>
  </thumbnails>
</workbook>
