<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0208.0337                               -->
<workbook original-version='18.1' source-build='2024.1.0 (20241.24.0208.0337)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='100' min='1' />
      </column>
    </datasource>
    <datasource caption='Orders (Multiple Connections)' inline='true' name='federated.0rsjxxb19b25lg0znv4mh1sjjlj3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1fwtrxl0ell7zl15ronv106d1qqh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Prasang/Documents/My Tableau Repository/Data sources/2024.1/en_GB-EU/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Sample - Superstore (2)' name='excel-direct.0y37zl61ca0cnu18nw6te06ozdas'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Prasang/Documents/My Tableau Repository/Data sources/2024.1/en_GB-EU/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0y37zl61ca0cnu18nw6te06ozdas' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0y37zl61ca0cnu18nw6te06ozdas' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_826428FF9C0F49058A1F8B1F53761C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_826428FF9C0F49058A1F8B1F53761C51]' role='measure' type='quantitative' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Region]' filter-group='2'>
        <groupfilter function='member' level='[Region]' member='&quot;South&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_826428FF9C0F49058A1F8B1F53761C51'>
            <properties context=''>
              <relation connection='excel-direct.0y37zl61ca0cnu18nw6te06ozdas' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet)' inline='true' name='federated.1b92lrq1vgk2o318a5m6c06j27tz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet' name='excel-direct.0a4k24x10oqug61085dsx1gaih1d'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Prasang/Downloads/9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0a4k24x10oqug61085dsx1gaih1d' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='date' date-parse-format='&apos;MX&apos;-yyyyZMMdd' name='Order ID' ordinal='1' />
            <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='2' />
            <column datatype='string' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0a4k24x10oqug61085dsx1gaih1d' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='date' date-parse-format='&apos;MX&apos;-yyyyZMMdd' name='Order ID' ordinal='1' />
            <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='2' />
            <column datatype='string' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_FBFA492EE585413595716717790B6760]' role='measure' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.946136' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0538642' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ad Dawhah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Al Minya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ardabil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Asyut&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baja California&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Basilicata&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brasov&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cajamarca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Catalonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chiapas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coimbra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Daegu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Diyarbakir&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elazig&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Federal District&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greater Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haifa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hims&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iasi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ishikawa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jinja&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kandahar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kerman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kirovohrad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lacs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Limpopo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luhans&apos;k&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manisa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Masovia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Meta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moquegua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Territory&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Olomouc&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pahang&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Piedmont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Provincia de Buenos Aires&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rabat-Salé-Zemmour-Zaer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rondônia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Pedro de Macorís&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saxony-Anhalt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sidi Bel Abbes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sud-Ouest&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tambov&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ucayali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vargas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vrancea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zhejiang&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&apos;Ajman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Al Fayyum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aqmola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ashanti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ayacucho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangkok&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgorod&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burgas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canterbury&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chaguanas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chuquisaca&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Corrientes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Durrës&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Espírito Santo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fujian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gombe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guerrero&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Haute-Matsiatra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hrodna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Imo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jawa Tengah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kahramanmaras&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kastamonu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Khyber Pakhtunkhwa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kymenlaakso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liaoning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Los Rios&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manabi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mecklenburg-Vorpommern&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mykolayiv&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nevsehir&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;O&apos;Higgins&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oslo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Perak&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pomerania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qostanay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rio Grande do Sul&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santo Domingo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shanxi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sliven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Gallen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ta&apos;izz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tekirdag&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vilnius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Western Visayas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zagrebacka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Abruzzi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Al Jawf&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anambra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astrakhan&apos;&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bacau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barahona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boyacá&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushehr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carinthia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chelyabinsk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cluj&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Distrito Capital&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Cape&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Extremadura&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Galicia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Casablanca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gunma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heilongjiang&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Huila&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ivanovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kaliningrad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kayes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kilimanjaro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mazandaran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Melilla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nakhon Ratchasima&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New South Wales&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Rhine-Westphalia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ordu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ouémé&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Phnom Penh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prague&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Quezaltenango&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rivers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Fernando&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shumen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sokoto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Styria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Táchira&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ternopil&apos;&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Valle del Cauca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yambol&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zaporizhzhya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adiyaman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alagoas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anseba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arica y Parinacota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Atlántida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bauchi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishkek&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caras-Severin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Equatoria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinandega&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cross River&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dar Es Salaam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dolj&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Entre Ríos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Flemish Brabant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Groningen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guangdong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Halland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hokkaido&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jujuy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Khartoum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Konya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lambayeque&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ljubljana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Magallanes y Antártica Chilena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Matanzas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Midi-Pyrénées&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moscow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Navarra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ninawa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pará&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Plateaux&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puno&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Red Sea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sabah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Semnan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sinaloa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sulawesi Utara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taranaki&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tipaza&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Upper Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vaud&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Xinjiang Uygur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yazd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zulia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adamaoua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Al Qadisiyah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anhui&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ardahan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Atacama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baja California Sur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basque Country&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bihor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bremen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Calabarzon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Catamarca&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chiba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cojedes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Daejeon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djelfa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elbasan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Federation of Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gaziantep&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hainan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hirat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;iauliai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Isla de la Juventud&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jizan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kankan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kermanshah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kirsehir&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laghouat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lisboa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lusaka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mbeya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;México&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moravian-Silesian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nangarhar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ondo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pinar del Río&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roraima&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Salvador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Schleswig-Holstein&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Siirt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Southland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suhaj&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thuringia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ulaanbaatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Värmland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vratsa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yangon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zhytomyr&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Abuja Capital Territory&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Al Madinah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ancash&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asturias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baden-Württemberg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bas-Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Braga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buskerud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Casanare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cherkasy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coahuila&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Distrito Federal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ebonyi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Extreme-Nord&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Galway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Gedeh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gyeonggi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hunan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Irbid&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jiangsu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kaluga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kayseri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kilis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;La Rioja&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lima (city)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lublin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manicaland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Masaya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mendoza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montevideo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namangan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North-West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oita&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ouest&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Piauí&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prahova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quindío&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rivne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Satu Mare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sibiu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sonora&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suceava&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tadla-Azilal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tete&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tunis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vallee Du Bandama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vlorë&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Al Basrah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alsace&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aomori&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arusha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Auvergne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bandundu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bejaia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolívar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulawayo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canelones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ceuta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chongqing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Córdoba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dhaka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eskisehir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Friuli-Venezia Giulia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Goiás&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guelma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hatay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hovedstaden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Istanbul&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kafr Ash Shaykh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kasai-Oriental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khulna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kwara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;León&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lorraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malatya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maritime&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Misratah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mures&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Neuquén&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norte de Santander&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nyanza&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Osh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pazardzhik&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poitou-Charentes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qinghai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saitama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santiago de Cuba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shandong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skåne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sylhet&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tbilisi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Utrecht&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vienna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western Australia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yunnan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;&apos;Amman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Al Gharbiyah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amazonas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aquitaine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aydin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangui&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bengkulu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Borgou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burgundy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caquetá&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Champagne-Ardenne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cidade De Maputo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Corsica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Diffa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Düzce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Est&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fukui&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gorj&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guizhou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hawke&apos;s Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Huambo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ivano-Frankivsk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jawa Timur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kalimantan Barat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Katanga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kiên Giang&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;L&apos;viv&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liberec&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Makkah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Managua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marrakech-Tensift-El Haouz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Medea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nagano&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niari&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Novgorod&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oaxaca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Osmaniye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peravia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Porto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Río Negro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salzburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;São Paulo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shinyanga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Södermanland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stara Zagora&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tabasco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tel Aviv&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uusimaa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vinnytsya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;White Nile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambezia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Akwa Ibom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Almaty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Antwerp&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Artemisa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Auckland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bamako&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boeny&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Campeche&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chocó&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Copperbelt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drenthe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Escuintla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Free State&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gisborne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harjumaa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hordaland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ile-de-France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jalisco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kabul&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kars&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Khomas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kumanovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lazio&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Loreto&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marche&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mayabeque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Miranda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Muharraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Negeri Sembilan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nord-Ouest&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nusa Tenggara Barat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oruro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pays de la Loire&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qazvin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Michael&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santander&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sevastopol&apos;&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sistan Va Baluchestan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Kivu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sumy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tasmania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tochigi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Usti nad Labem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vest-Agder&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yalova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yoro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aceh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Al Marqab&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andalusía&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arauca&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asunción&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baghdad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Basel-Stadt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Braila&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Buzau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Castile and León&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chernihiv&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuscatlán&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Edirne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F.C.T.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gangwon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Granma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gyeongsangnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hesse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hunedoara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iringa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jiangxi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kampala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Khmel&apos;nyts&apos;kyy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kindia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;La Romana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Limburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lubusz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maniema&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maseru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mérida&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montserrado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Okayama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Overijssel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Picardy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Primorsko-Goranska&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quintana Roo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rize&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Luis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Savanes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sichuan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sonsonate&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sucre&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taipei City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trabzon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tuscany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Valparaíso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Volyn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zeeland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Afyonkarahisar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Antalya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ashgabat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Atlantique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Balikesir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bavaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brussels&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Callao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Jutland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chiriquí&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cundinamarca&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dayr Az Zawr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Donetsk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Enugu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gauteng&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gezira&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guangxi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hamadan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Holguín&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Isparta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Junín&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Karaman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Khatlon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korçë&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Languedoc-Roussillon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lodz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Magdalena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maradi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mato Grosso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mostaganem&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nayarit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ningxia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Novosibirsk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraíba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pleven&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pwani&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rhineland-Palatinate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Catarina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seoul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sindh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Dublin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sumatera Barat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tarapacá&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tizi Ouzou&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Upper Normandy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Veneto&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wellington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yevrey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zürich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aichi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Antioquia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Atsimo-Andrefana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Balti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bay of Plenty&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bistrita-Nasaud&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bryansk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Camagüey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Luzon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chisinau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Constanta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dix-Huit Montagnes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Donga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Franche-Comté&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gharb-Chrarda-Béni Hssen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guantánamo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Homyel&apos;&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Igdir&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Izmir&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kabardino-Balkariya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kherson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kordestan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lombardy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maramures&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mato Grosso do Sul&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Minas Gerais&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mpumalanga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Neamt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nitra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nueva Esparta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Parana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Plovdiv&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qaraghandy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rift Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saida&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sergipe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Holland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sumatera Selatan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tarija&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tlemcen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uppsala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Veracruz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yobe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Al Bahr Al Ahmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Almaty City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anzoátegui&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Artibonite&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Australian Capital Territory&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Banaadir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beirut&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bogota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bujumbura-Mairie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canakkale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cesar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Choluteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cordillera&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denizli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Duarte&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Esfahan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Friesland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Giurgiu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guayas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hormozgan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ilina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jambi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kaduna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kasai-Occidental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Khorezm&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kutahya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebap&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lori&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mardin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maysan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Misiones&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murcia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nord-Pas-de-Calais&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nusa Tenggara Timur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Osaka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paysandú&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Podlaskie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint-Louis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santiago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shaanxi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sivas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Surxondaryo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taza-Al Hoceima-Taounate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Valcea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Western&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yucatán&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Al Buhayrah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amapá&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Apulia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ash Sharqiyah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aveiro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Banghazi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bekes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bur Sa&apos;id&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cantabria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chubut&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cork&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dhi Qar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Espaillat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fromager&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Golestan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guelmim-Es Semara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haut-Sassandra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hradec Kralove&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Imereti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jawa Barat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kagawa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kassala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Khuzestan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kwazulu-natal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesser Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Los Lagos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maluku&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Markazi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monseñor Nouel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mwanza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niamey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Brabant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nzérékoré&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Osjecko-Baranjska&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Podgorica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poltava&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rio Grande do Norte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salah Ad Din&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santiago del Estero&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shanghai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Skikda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T?nh C?n Th?&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tehran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tolima&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Villa Clara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Cape&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zacatecas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adamawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Al Qahirah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ankara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arequipa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atakora&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Baki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Batman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bingol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brest&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Calabria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ceará&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chihuahua&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dagestan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emilia-Romagna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fès-Boulemane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gelderland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hainaut&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hiroshima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ibaraki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jizzakh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kano&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Khánh Hòa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Klaipeda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lagos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Litoral&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manzini&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Matabeleland North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monagas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morelos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nariño&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nouakchott&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panevezys&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Piura&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Puebla&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajshahi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ruvuma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sancti Spíritus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sikasso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Chungcheong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sulawesi Tengah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ulsan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Varna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Waikato&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yaracuy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ziguinchor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Acre&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Al Minufiyah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arbil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aswan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bahia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bashkortostan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brandenburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Delgado&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Castile-La Mancha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cochabamba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dà Nang&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Edo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fars&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gansu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greater Accra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gyor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hyogo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Irkutsk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jilin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kanagawa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kinshasa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;La Vega&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Limousin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lucerne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mashonaland West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mersin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mopti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nampula&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mindanao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Orientale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oyo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pichincha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Provence-Alpes-Côte d&apos;Azur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ra&apos;s Al Khaymah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rogaland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Luis Potosí&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saxony&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sicily&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Souss-Massa-Draâ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sud&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tamaulipas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Th? Dô Hà N?i&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tyrol&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Van&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Voronezh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zhambyl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;&apos;Asir&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Al Hudaydah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ar Raqqah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Azuay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bani Suwayf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benguela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Borno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bursa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carabobo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ciego de Ávila&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cortés&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dire Dawa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Flanders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estelí&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fukuoka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grad Zagreb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hebei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hubei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Inhambane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jeju&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kalimantan Selatan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katsina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kigali&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Libertad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liège&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lower Normandy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manawatu-Wanganui&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mehedinti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nagasaki&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niassa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Holland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Osun&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pernambuco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portuguesa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Queensland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Risaralda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samsun&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sarawak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shizuoka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sofala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stavropol&apos;&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tabora&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trengganu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vladimir&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yamaguchi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zamfara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aksaray&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alibori&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antofagasta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arkhangel&apos;sk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atsinanana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Baluchistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bechar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bitola&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Budapest&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Campania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Centrale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chittagong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Constantine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Doukkala-Abda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Erzurum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Francisco Morazán&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gilan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guárico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harare&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ilam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kabarole&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuala Lumpur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Las Tunas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lorestan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malanje&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maranhão&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Matruh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mtwara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newfoundland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nord&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nuevo León&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pavlodar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Plzen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qashqadaryo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rhône-Alpes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Catherine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Setúbal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sirnak&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Khorasan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sumatera Utara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tartumaa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tocantins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Usak&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vitsyebsk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Flanders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yogyakarta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amasya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Annaba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arges&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atlántico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Balearic Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Batna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biobio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Caldas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chimaltenango&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colón&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dakar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dnipropetrovs&apos;k&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland Proper&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guanajuato&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hajdu-Bihar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ho Chí Minh City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ibb&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jubbada Hoose&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Karbala&apos;&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kharkiv&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kocaeli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lagunes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Littoral&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madrid&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maputo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Matagalpa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michoacán&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morogoro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;National Capital&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Opole&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Plateau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Razavi Khorasan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saarland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sanliurfa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Selangor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Silesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Splitsko-Dalmatinska&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sulawesi Tenggara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tanger-Tétouan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Umbria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Västra Götaland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yaroslavl&apos;&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zinder&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Al Iskandariyah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Analamanga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ar Riyad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Babil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Banská Bystrica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beni&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botosani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Busan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chaouia-Ouardigha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cienfuegos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corum&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Diyala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eastern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estuaire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Galati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Granada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hedmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huehuetenango&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Inner Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jerusalem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kalimantan Timur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kaunas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kigoma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;La Pampa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liguria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lower Saxony&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mandoul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Meknès-Tafilalet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nairobi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigde&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Lebanon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ogun&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Otago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pernik&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Potosí&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Querétaro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rivera&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Cristóbal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sardinia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shkodër&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sofiya-Grad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stockholm&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tabuk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tottori&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trentino-Alto Adige&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valenciana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woqooyi Galbeed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zanjan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_FBFA492EE585413595716717790B6760'>
            <properties context=''>
              <relation connection='excel-direct.0a4k24x10oqug61085dsx1gaih1d' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='date' date-parse-format='&apos;MX&apos;-yyyyZMMdd' name='Order ID' ordinal='1' />
                  <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='2' />
                  <column datatype='string' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='City' ordinal='8' />
                  <column datatype='string' name='State' ordinal='9' />
                  <column datatype='string' name='Country' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Market' ordinal='12' />
                  <column datatype='string' name='Region' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_96CD40C7A1B14A139B8E6A5B0A2FE77D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='USA Sales and Profits' type='sheet' worksheet='Sales in USA' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='USA Sales and Profits' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Profits in USA'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ff0000'>Profits in USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet)' name='federated.1b92lrq1vgk2o318a5m6c06j27tz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b92lrq1vgk2o318a5m6c06j27tz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_96CD40C7A1B14A139B8E6A5B0A2FE77D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]</column>
            <column>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' />
              <size column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Profit:qk]' />
              <text column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' />
              <text column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Profit:qk]' />
              <lod column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Quantity:qk]' />
              <lod column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Shipping Cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5B96203E-322B-4821-9724-DA36AC5EA472}' />
    </worksheet>
    <worksheet name='Sales Trend in USA'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ff0000'>Sales Trend in USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet)' name='federated.1b92lrq1vgk2o318a5m6c06j27tz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b92lrq1vgk2o318a5m6c06j27tz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_96CD40C7A1B14A139B8E6A5B0A2FE77D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' included-values='in-range'>
            <min>40000.0</min>
            <max>146729.09649999969</max>
          </filter>
          <slices>
            <column>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]</column>
            <column>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]</column>
            <column>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' />
              <text column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' />
              <lod column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]</rows>
        <cols>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[tyr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{BC046D37-9ED7-4295-83D5-98EC3361718C}' />
    </worksheet>
    <worksheet name='Sales in USA'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ff0000'>Sales in USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet)' name='federated.1b92lrq1vgk2o318a5m6c06j27tz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b92lrq1vgk2o318a5m6c06j27tz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Longitude (generated)]' field-type='quantitative' max='-1088759.1369846351' min='-15294939.06113844' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Latitude (generated)]' field-type='quantitative' max='7726133.9984847121' min='1799629.4694695198' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' />
              <text column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' />
              <lod column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]' />
              <lod column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' />
              <geometry column='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Latitude (generated)]</rows>
        <cols>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9B22EE48-CC0F-4342-9CBE-3E32E0F062B4}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Multiple Connections)' name='federated.0rsjxxb19b25lg0znv4mh1sjjlj3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rsjxxb19b25lg0znv4mh1sjjlj3'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]</rows>
        <cols>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{5EA243F7-E82C-4E4C-89D8-6341C1007F1F}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Multiple Connections)' name='federated.0rsjxxb19b25lg0znv4mh1sjjlj3' />
          </datasources>
          <datasource-dependencies datasource='federated.0rsjxxb19b25lg0znv4mh1sjjlj3'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk]'>
            <groupfilter count='2' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Category])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]' direction='DESC' measure-to-sort-by='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Sales:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]</column>
            <column>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Profit:qk]' />
              <lod column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Sales:qk]' />
              <lod column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Profit:qk]' />
              <color column='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[sum:Sales:qk]</rows>
        <cols>([federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk] / [federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{7B4E56CC-D684-4CC6-A370-E174CC71BCAA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='USA Sales and Profits'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet)' name='federated.1b92lrq1vgk2o318a5m6c06j27tz' />
      </datasources>
      <datasource-dependencies datasource='federated.1b92lrq1vgk2o318a5m6c06j27tz'>
        <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
        <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Sales in USA' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Profits in USA' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Sales Trend in USA' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='Sales in USA' pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='81250' id='10' name='Profits in USA' pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' type-v2='color' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='12' name='Sales Trend in USA' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='90375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='15' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sales in USA' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Sales in USA' pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Profits in USA' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='81250' id='10' name='Profits in USA' pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' type-v2='color' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='12' name='Sales Trend in USA' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='90375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Sales Trend in USA' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DC2C370D-E763-41C7-A4D4-41E2BEEC365C}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]</field>
            <field>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2AFAD9FF-0823-46AA-905D-74593D7E9B0F}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Category:nk]</field>
            <field>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Region:nk]</field>
            <field>[federated.0rsjxxb19b25lg0znv4mh1sjjlj3].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9AA25C0-A553-4AC7-B391-A000604190C0}' />
    </window>
    <window class='worksheet' name='Sales in USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]</field>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5046DCC7-BB9B-464A-B2AA-96CF0BE401DE}' />
    </window>
    <window class='worksheet' name='Profits in USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]</field>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{64EF970B-B166-4B1E-B96F-47850D3BD514}' />
    </window>
    <window class='dashboard' maximized='true' name='USA Sales and Profits'>
      <viewpoints>
        <viewpoint name='Profits in USA'>
          <highlight>
            <color-one-way>
              <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
        <viewpoint name='Sales Trend in USA'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales in USA'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{001C95F8-ED0F-47A3-845C-5056E9D290DF}' />
    </window>
    <window class='worksheet' name='Sales Trend in USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:Country:nk]</field>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[none:State:nk]</field>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[sum:Sales:qk]</field>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[tyr:Order Date:ok]</field>
            <field>[federated.1b92lrq1vgk2o318a5m6c06j27tz].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60BD1D6A-D017-49AA-B635-277DC1E37B6B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Profits in USA' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales Trend in USA' width='192'>
      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
      825Q+osYlQsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales in USA' width='192'>
      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
      sNxZodq8h0uAD0ih0fEaZNPm0Mf/EcKOVSDoEm+73aZarWKaJqOjo2GZ4vr6ejisOel7wCa9
      WUrJu3/2Oi/cfUhO7/KkEwTUPJeSYWKGXeECbi2vcXR8rGe1SML/tLDCjdQjFaib8SDIyXXK
      WpXnz53ly1/6AkII5ufvMz3dDXJ98O4H3P2Lu0yKCWrpGilS5J3uyNKO3+FS+xL/+d//W4yN
      je3omQ3xdGJXK4CaW+U4Dp1Oh3q9Tj6f7zaRymZ3zABCCI5eeJ5Ld+d5IdDQge+X0oydOMel
      lRVO3H3IQd0ENI5PjG8+8AY8Kfm/1xY4PTnFmU8/z2fKZd6/Po/TXMcXaW6um7REGd/XGZ8Y
      Z2am20pxZuZR1PjQoUO8f+R9VpZW+Mqnvkqj0eC7/893KHklLN0iR44bV28w9rkhA3wUsOvG
      WJqmUSwWSaVS1Go1giAgn8+jaRq6roftS7aLcrmM+Nlv8NYbf4H2cJEzr3yRsY3p6Feyb5G7
      dIOyMVj1WHA6fPYnvs6nP/dqaJP85NdlOLTun/7271Ioljk0dYyLl6/zpS+8hmX11jA0lu7w
      9g//HAoznFyZ4w++90OWMzpBu8aIV+Rw+gD/7//8vzJ9eJrvfev3qFYXOfuzf5OvHQv4H/7R
      v+Fv/t3/mGHXn2cHu1KBolBtwtWw5kymGxFeX1/v6eET79XZz30ogwDX88LBb0IIOp0O13/n
      X/FpsbnIxQkC/rC+RmF0hLNf/xonz53te+zoJHfP8xIHYM9dfZMbKwKt/oBmYDB15AR3rr3L
      0i2b2WaB+bl3uVR9yM/9zV/lJ7/0Cn/+3e9w/tUvcvmH3+P2vTo/92u/xOCSnSGeJuxggFcy
      hBChFFWuUcMwKJfLPR2dt308TQvHDilkMhlyn/oES05vjk7H9/l2ZZnyy5/k6//Rf8ip8+cG
      +uVVSxUhRN/JiqaZor62wHrL5ROf/SytxTkWllZYX1nHay/xgzu3aa8vcPnWXezqAh1rnGD5
      Mt954zI3r7zL9bvLO77nIT487JkBXNel0WiEY4Nsu0ukyjhOkrI7gVo5jp99jsULZ1j3Hs0y
      mHc6BCeO8o1vfjOcw7tXCBnwYO4ui+s1OpVlrl6/ysiBc4xM+czbJl//xBc5MXOazkqbO9ev
      c/L8WQpTp/j1f+8v8/y5c8yMD07zGOLpwp5VoCAIaLfbtFqtUOUplUqhC9RxHGq1Gq7rblsN
      2nSRG/uur6+z8q9+l+dTXTXr/3p4l6/9yi/zwguPv734t/7FP2PhXcmk2TX2V91VfuY/+yaT
      U5Nbf3mIpxZ7XgE0TSObzVIulymVunn2iuDVjKuRkZFNxmbcLhgEtW+pVKI2Vsbb+N6pQumJ
      +eR/4ud/CW+sHo5QGjVHuXXz1hM59xCPD3tmACDUqTOZDOVyOTSMVU6+rutYlrXJJkhign5N
      r9R+p7/0RX40VuADzyar6QQ79DbtFpZl8c1f+iZN0URKiSe9YUDsI4B9nw9gWRamaeI4Tk/C
      nGl2I6ie5w10kUZHH6n/KwghKJSKvPTTP0mz2aS2thaOEX0SmD00y7mfPsfl371MQMDBQ5tz
      hYZ4trAvK0ASfN8PJ6pDd6D06Ogo2Wx2S+9QEAThHLA41KpSKBQ4e+ECMwcOJBzh8UAIwYsv
      fQJ7ysGb8JicfKT/70SlG+LpwWOZEGNZFp7n4bpuOFhaqTW5XA7P8+h0Oj1Eoz4fWAEWqQ8W
      QuzZw7RT2LbN9evX+bX/5Ne63agjcF33iV/PEHvHvq8AisjHxsbQNI1GoxEGoAB0XadUKvUY
      xVJKlpeXw1wilWCnCN5xnE1pFB8GoZmmyXPPPRcSevQaVKv2IZ4tPJYVQEnnUqlEvV6nWq12
      Ux02CEYxge/7uG7Xr99oNMhkMtRqNdrtduhBsm2bbDaLruu02+0w6a5YLD7xhDQVSEtCOKNg
      iGcKj80GAMKCGdhc32sYRhgoA8hms6yvr1MoFOh0OmFEudFohOkQ2WwWz/PI5/N9E+72G0pN
      830/NOA9z8PzvE0Sf6j+PHvYcyBsK8Tbk8Rh2zZra2uhZ8gwup0gms0mqVQqrDuwLIt6vU42
      m6XValEqlRgZGQkZ6HHA9/0wwGea5ib3rmmaFIvFnjGuQzxbeHzUs4GtiMI0TQzDCKWpGnmk
      qsaio5BUusOT6rimDPVMJhOqN0EQhAa+4zisr6+HDJDP58Ms1CGeDTx2BtgKmqaRTqfDVIm4
      satyjKIeIPXT6XTI53eeexk9VjQmEfXiKMJXNofv+xiGQbHYzfVR21zXDVeKSqVCsVjEspKb
      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
      oFI8VLV4+wNBF0PBGf77rgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='139' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='183'>
      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
    </thumbnail>
    <thumbnail height='192' name='USA Sales and Profits' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
